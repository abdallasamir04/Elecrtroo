@model Electro_ECommerce.Models.Category

@{
    ViewData["Title"] = "Create Category";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0 rounded-3">
        <div class="card-header bg-white p-4 border-bottom">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-0 fw-bold">@ViewData["Title"]</h2>
                    <p class="text-muted mb-0">Create a new product category for your store</p>
                </div>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fa fa-arrow-left me-2"></i>Back to List
                </a>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row">
                <div class="col-lg-8 col-md-10 mx-auto">
                    <form asp-action="Create" enctype="multipart/form-data" id="categoryForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger alert alert-danger py-2"></div>

                        <div class="mb-4">
                            <label asp-for="Name" class="form-label fw-medium">
                                <i class="fa fa-folder me-2 text-primary"></i>Category Name
                            </label>
                            <input asp-for="Name" class="form-control form-control-lg" placeholder="Enter category name" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <small class="text-muted">Choose a clear, descriptive name for your category</small>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Description" class="form-label fw-medium">
                                <i class="fa fa-align-left me-2 text-primary"></i>Description
                            </label>
                            <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter category description"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                            <small class="text-muted">Briefly describe what products belong in this category</small>
                        </div>

                        <div class="mb-4">
                            <label class="form-label fw-medium">
                                <i class="fa fa-image me-2 text-primary"></i>Category Image
                            </label>
                            <div class="image-upload-container">
                                <div class="image-upload-preview" id="imagePreview">
                                    <i class="fa fa-cloud-upload"></i>
                                    <p>Drag & drop or click to upload</p>
                                </div>
                                <input type="file" name="ImageFile" id="imageUpload" class="form-control" accept="image/*" />
                            </div>
                            <small class="text-muted">Recommended size: 600x400px. Max file size: 2MB</small>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">
                                <i class="fa fa-refresh me-2"></i>Reset
                            </button>
                            <div>
                                <a asp-action="Index" class="btn btn-light me-2">Cancel</a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fa fa-save me-2"></i>Create Category
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .image-upload-container {
        position: relative;
        width: 100%;
        margin-bottom: 10px;
    }

    .image-upload-preview {
        border: 2px dashed #ccc;
        border-radius: 8px;
        padding: 40px 20px;
        text-align: center;
        color: #777;
        cursor: pointer;
        transition: all 0.3s;
        background-color: #f9f9f9;
    }

        .image-upload-preview:hover {
            border-color: var(--bs-primary);
            background-color: #f0f7ff;
        }

        .image-upload-preview i {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: #aaa;
        }

        .image-upload-preview.has-image {
            padding: 0;
            border: none;
            background-size: cover;
            background-position: center;
            height: 200px;
        }

            .image-upload-preview.has-image i,
            .image-upload-preview.has-image p {
                display: none;
            }

    #imageUpload {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }

    .form-control:focus {
        border-color: var(--bs-primary);
        box-shadow: 0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25);
    }

    .btn-primary {
        transition: all 0.3s;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(var(--bs-primary-rgb), 0.3);
        }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Image preview functionality
        document.addEventListener('DOMContentLoaded', function() {
            const imageUpload = document.getElementById('imageUpload');
            const imagePreview = document.getElementById('imagePreview');

            // Image upload preview
            if (imageUpload && imagePreview) {
                imageUpload.addEventListener('change', function() {
                    if (this.files && this.files[0]) {
                        const reader = new FileReader();

                        reader.onload = function(e) {
                            imagePreview.style.backgroundImage = `url(${e.target.result})`;
                            imagePreview.classList.add('has-image');
                        }

                        reader.readAsDataURL(this.files[0]);
                    }
                });

                // Drag and drop functionality
                ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                    imagePreview.addEventListener(eventName, preventDefaults, false);
                });

                function preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                ['dragenter', 'dragover'].forEach(eventName => {
                    imagePreview.addEventListener(eventName, highlight, false);
                });

                ['dragleave', 'drop'].forEach(eventName => {
                    imagePreview.addEventListener(eventName, unhighlight, false);
                });

                function highlight() {
                    imagePreview.classList.add('border-primary');
                }

                function unhighlight() {
                    imagePreview.classList.remove('border-primary');
                }

                imagePreview.addEventListener('drop', handleDrop, false);

                function handleDrop(e) {
                    const dt = e.dataTransfer;
                    const files = dt.files;

                    if (files && files[0]) {
                        imageUpload.files = files;
                        const event = new Event('change');
                        imageUpload.dispatchEvent(event);
                    }
                }
            }

            // Add animation to the card when the page loads
            const card = document.querySelector('.card');
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';

            setTimeout(() => {
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, 100);
        });

        // Reset form function
        function resetForm() {
            document.getElementById('categoryForm').reset();
            document.getElementById('imagePreview').style.backgroundImage = '';
            document.getElementById('imagePreview').classList.remove('has-image');
        }
    </script>
}