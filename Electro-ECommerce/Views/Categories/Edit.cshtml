@model Electro_ECommerce.Models.Category

@{
    ViewData["Title"] = "Edit Category";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0 rounded-3">
        <div class="card-header bg-white p-4 border-bottom">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-0 fw-bold">@ViewData["Title"]</h2>
                    <p class="text-muted mb-0">Update category information</p>
                </div>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fa fa-arrow-left me-2"></i>Back to List
                </a>
            </div>
        </div>
        
        <div class="card-body p-4">
            <div class="row">
                <div class="col-lg-8 col-md-10 mx-auto">
                    <form asp-action="Edit" enctype="multipart/form-data" id="categoryForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger alert alert-danger py-2"></div>
                        <input type="hidden" asp-for="CategoryId" />
                        
                        <div class="row">
                            <div class="col-md-7">
                                <div class="mb-4">
                                    <label asp-for="Name" class="form-label fw-medium">
                                        <i class="fa fa-folder me-2 text-primary"></i>Category Name
                                    </label>
                                    <input asp-for="Name" class="form-control form-control-lg" placeholder="Enter category name" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                    <small class="text-muted">Choose a clear, descriptive name for your category</small>
                                </div>
                                
                                <div class="mb-4">
                                    <label asp-for="Description" class="form-label fw-medium">
                                        <i class="fa fa-align-left me-2 text-primary"></i>Description
                                    </label>
                                    <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter category description"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                    <small class="text-muted">Briefly describe what products belong in this category</small>
                                </div>
                            </div>
                            
                            <div class="col-md-5">
                                <div class="mb-4">
                                    <label class="form-label fw-medium">
                                        <i class="fa fa-image me-2 text-primary"></i>Category Image
                                    </label>
                                    <div class="image-upload-container">
                                        <div class="image-upload-preview" id="imagePreview" style="background-image: url('@Url.Content(Model.ImageUrl ?? "/img/default.jpg")');">
                                        </div>
                                        <input type="file" name="ImageFile" id="imageUpload" class="form-control" accept="image/*" />
                                    </div>
                                    <small class="text-muted">Leave empty to keep current image</small>
                                </div>
                                
                                <div class="card mt-4 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title">
                                            <i class="fa fa-info-circle text-primary me-2"></i>Category Info
                                        </h5>
                                        <div>
                                            <label class="form-label fw-medium mb-0">Created</label>
                                            <p class="mb-0">@(Model.CreatedAt?.ToString("MMM dd, yyyy") ?? "N/A")</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <hr class="my-4">
                        
                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                <i class="fa fa-trash me-2"></i>Delete
                            </button>
                            <div>
                                <a asp-action="Index" class="btn btn-light me-2">Cancel</a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fa fa-save me-2"></i>Save Changes
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category? This action cannot be undone.</p>
                <p class="fw-bold">@Model.Name</p>
                @if (Model.Products?.Count > 0)
                {
                    <div class="alert alert-warning">
                        <i class="fa fa-exclamation-triangle me-2"></i>
                        Warning: This category contains @Model.Products.Count products that will be affected.
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <a asp-action="Delete" asp-route-id="@Model.CategoryId" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>

<style>
    .image-upload-container {
        position: relative;
        width: 100%;
        margin-bottom: 10px;
    }
    
    .image-upload-preview {
        border: 2px dashed #ccc;
        border-radius: 8px;
        padding: 0;
        text-align: center;
        color: #777;
        cursor: pointer;
        transition: all 0.3s;
        background-color: #f9f9f9;
        background-size: cover;
        background-position: center;
        height: 200px;
    }
    
    .image-upload-preview:hover {
        border-color: var(--bs-primary);
    }
    
    #imageUpload {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: var(--bs-primary);
        box-shadow: 0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25);
    }
    
    .btn-primary {
        transition: all 0.3s;
    }
    
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(var(--bs-primary-rgb), 0.3);
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Image preview functionality
        document.addEventListener('DOMContentLoaded', function() {
            const imageUpload = document.getElementById('imageUpload');
            const imagePreview = document.getElementById('imagePreview');
            
            // Image upload preview
            if (imageUpload && imagePreview) {
                imageUpload.addEventListener('change', function() {
                    if (this.files && this.files[0]) {
                        const reader = new FileReader();
                        
                        reader.onload = function(e) {
                            imagePreview.style.backgroundImage = `url(${e.target.result})`;
                        }
                        
                        reader.readAsDataURL(this.files[0]);
                    }
                });
                
                // Drag and drop functionality
                ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                    imagePreview.addEventListener(eventName, preventDefaults, false);
                });
                
                function preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                
                ['dragenter', 'dragover'].forEach(eventName => {
                    imagePreview.addEventListener(eventName, highlight, false);
                });
                
                ['dragleave', 'drop'].forEach(eventName => {
                    imagePreview.addEventListener(eventName, unhighlight, false);
                });
                
                function highlight() {
                    imagePreview.classList.add('border-primary');
                }
                
                function unhighlight() {
                    imagePreview.classList.remove('border-primary');
                }
                
                imagePreview.addEventListener('drop', handleDrop, false);
                
                function handleDrop(e) {
                    const dt = e.dataTransfer;
                    const files = dt.files;
                    
                    if (files && files[0]) {
                        imageUpload.files = files;
                        const event = new Event('change');
                        imageUpload.dispatchEvent(event);
                    }
                }
            }
            
            // Add animation to the card when the page loads
            const card = document.querySelector('.card');
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
            
            setTimeout(() => {
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, 100);
        });
    </script>
}