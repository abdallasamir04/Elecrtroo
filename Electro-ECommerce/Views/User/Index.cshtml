@model IEnumerable<Electro_ECommerce.Models.User>
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "User Management";
    Layout = "_AdminLayout";
}

<!-- Toastr Notifications -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<style>
    /* Custom Styles */
    .admin-card {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0,0,0,0.05);
        padding: 25px;
    }

    

    .table-responsive {
        border-radius: 8px;
        overflow: hidden;
    }

    .table {
        margin-bottom: 0;
    }

        .table thead th {
            background-color: #f8f9fa;
            border-bottom: 2px solid #e9ecef;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
        }

        .table tbody tr {
            transition: all 0.2s ease;
        }

            .table tbody tr:hover {
                background-color: rgba(0,123,255,0.05);
            }

    .badge {
        font-weight: 500;
        padding: 5px 10px;
        font-size: 0.75rem;
    }

    .btn-group .btn {
        border-radius: 4px !important;
    }

    .btn-outline-danger {
        border-color: #dc3545;
        color: #dc3545;
    }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: white;
        }

    /* Modal Styles */
    .modal-header {
        border-bottom: none;
        padding-bottom: 0;
    }

    .modal-footer {
        border-top: none;
        padding-top: 0;
    }

    /* Animation */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .table tbody tr {
        animation: fadeIn 0.3s ease forwards;
    }

        .table tbody tr:nth-child(1) {
            animation-delay: 0.1s;
        }

        .table tbody tr:nth-child(2) {
            animation-delay: 0.2s;
        }

        .table tbody tr:nth-child(3) {
            animation-delay: 0.3s;
        }
    /* Continue for more rows if needed */
</style>

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="admin-card">
                

                <div class="container-fluid mt-4">
                    <!-- Header Section with Stats -->
                    <div class="row mb-4">
                        <div class="col-lg-8">
                            <h2 class="fw-bold mb-0">User Management</h2>
                        </div>
                        <div class="col-lg-4 text-lg-end">
                            <a asp-controller="User" asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-user-plus me-2"></i>Add New User
                            </a>
                        </div>
                    </div>

                    <!-- Stats Cards -->
                    <div class="row g-3 mb-4">
                        <div class="col-md-3 col-sm-6">
                            <div class="card border-0 shadow-sm h-100">
                                <div class="card-body d-flex align-items-center">
                                    <div class="rounded-circle bg-primary bg-opacity-10 p-3 me-3">
                                        <i class="fas fa-users fa-2x text-primary"></i>
                                    </div>
                                    <div>
                                        <h6 class="text-muted mb-1">Total Users</h6>
                                        <h3 class="mb-0 fw-bold">@Model.Count()</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="card border-0 shadow-sm h-100">
                                <div class="card-body d-flex align-items-center">
                                    <div class="rounded-circle bg-success bg-opacity-10 p-3 me-3">
                                        <i class="fas fa-user-shield fa-2x text-success"></i>
                                    </div>
                                    <div>
                                        <h6 class="text-muted mb-1">Admins</h6>
                                        <h3 class="mb-0 fw-bold">@Model.Count(u => u.Role == "Admin")</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="card border-0 shadow-sm h-100">
                                <div class="card-body d-flex align-items-center">
                                    <div class="rounded-circle bg-info bg-opacity-10 p-3 me-3">
                                        <i class="fas fa-user fa-2x text-info"></i>
                                    </div>
                                    <div>
                                        <h6 class="text-muted mb-1">Customers</h6>
                                        <h3 class="mb-0 fw-bold">@Model.Count(u => u.Role != "Admin")</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="card border-0 shadow-sm h-100">
                                <div class="card-body d-flex align-items-center">
                                    <div class="rounded-circle bg-warning bg-opacity-10 p-3 me-3">
                                        <i class="fas fa-user-clock fa-2x text-warning"></i>
                                    </div>
                                    <div>
                                        <h6 class="text-muted mb-1">Pending</h6>
                                        <h3 class="mb-0 fw-bold">@Model.Count(u => !u.EmailConfirmed)</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>




                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>ID</th>
                                <th>User</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Created</th>
                                <th>Status</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var user in Model)
                                {
                                    <tr>
                                        <td class="text-muted">@user.Id</td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <h6 class="mb-0">@user.UserName</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@user.Email</td>
                                        <td>
                                            @if (user.Role == "Admin")
                                            {
                                                <span class="badge bg-danger">
                                                    <i class="fas fa-shield-alt me-1"></i>Admin
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-primary">
                                                    <i class="fas fa-user me-1"></i>@(user.Role ?? "Customer")
                                                </span>
                                            }
                                        </td>
                                        <td>@(user.CreatedAt?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                                        <td>
                                            @if (user.EmailConfirmed)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="fas fa-check-circle me-1"></i>Active
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">
                                                    <i class="fas fa-clock me-1"></i>Pending
                                                </span>
                                            }
                                        </td>
                                        <td class="text-end">
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-sm btn-outline-danger"
                                                        onclick="confirmDelete('@user.Id', '@user.UserName')"
                                                        data-bs-toggle="tooltip" title="Delete User">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center py-5">
                                        <div class="empty-state">
                                            <i class="fas fa-users fa-4x text-muted mb-4"></i>
                                            <h4>No Users Found</h4>
                                            <p class="text-muted mb-4">You haven't added any users yet</p>
                                            <a asp-controller="User" asp-action="Create" class="btn btn-primary">
                                                <i class="fas fa-plus me-2"></i>Add New User
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-4">
                    <i class="fas fa-trash-alt fa-4x text-danger mb-3"></i>
                    <h5>Are you sure you want to delete this user?</h5>
                    <p class="mb-0">User: <strong id="userName"></strong></p>
                </div>
                <div class="alert alert-danger">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-exclamation-circle me-3"></i>
                        <div>
                            <strong>Warning:</strong> This action cannot be undone. All user data will be permanently deleted.
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <form id="deleteForm" asp-controller="User" asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="userId" name="id" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Delete Permanently
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        // Configure Toastr
        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "timeOut": "5000",
            "extendedTimeOut": "2000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            // Tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Show notifications
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                        toastr.success('@Html.Raw(TempData["SuccessMessage"])');
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                        toastr.error('@Html.Raw(TempData["ErrorMessage"])');
            </text>
        }
        });

        // Delete confirmation function
        function confirmDelete(id, name) {
            document.getElementById('userId').value = id;
            document.getElementById('userName').textContent = name || 'this user';

            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        // AJAX form submission with loading state
        document.getElementById('deleteForm')?.addEventListener('submit', function(e) {
            e.preventDefault();

            const form = e.target;
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;

            // Show loading state
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Deleting...';

            fetch(form.action, {
                method: 'POST',
                body: new FormData(form),
                headers: {
                    'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    toastr.success(data.message);
                    bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    throw new Error(data.message || 'Failed to delete user');
                }
            })
            .catch(error => {
                toastr.error(error.message);
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalBtnText;
            });
        });
    </script>
}