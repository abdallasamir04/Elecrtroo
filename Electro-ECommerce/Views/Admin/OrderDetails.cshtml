@model Electro_ECommerce.Models.Order
@{
    ViewData["Title"] = "Order Details (Admin)";
    Layout = "_AdminLayout";
}

<div class="container-fluid mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Admin">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="/Admin/Orders">All Orders</a></li>
            <li class="breadcrumb-item active" aria-current="page">Order #@Model.OrderId</li>
        </ol>
    </nav>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3">Order #@Model.OrderId</h1>
        <a href="/Admin/Orders" class="btn btn-outline-primary">
            <i class="fas fa-arrow-left me-2"></i> Back to Orders
        </a>
    </div>

    <div class="row">
        <!-- Order Items -->
        <div class="col-md-8">
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Qty</th>
                                    <th class="text-end">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderDetails)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@(string.IsNullOrEmpty(item.Product.ImagePath) ? "/images/default-placeholder.png" : item.Product.ImagePath)"
                                                     alt="@item.Product.Name" width="50" class="me-3" />
                                                <div>@item.Product.Name</div>
                                            </div>
                                        </td>
                                        <td>$@item.UnitPrice.ToString("F2")</td>
                                        <td>@item.Quantity</td>
                                        <td class="text-end">$@item.Subtotal.ToString("F2")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-light">
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
                                    <td class="text-end">$@(Model.TotalAmount * 0.9m)</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Tax (10%):</strong></td>
                                    <td class="text-end">$@(Model.TotalAmount * 0.1m)</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                    <td class="text-end"><strong>$@Model.TotalAmount.ToString("F2")</strong></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Information -->
        <div class="col-md-4">
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Order Information</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">Customer</h6>
                        <p class="mb-0">@Model.User?.UserName ?? "Unknown"</p>
                    </div>
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">Order Status</h6>
                        @switch (Model.Status)
                        {
                            case "Pending":
                                <span class="badge bg-warning text-dark">Pending</span>
                                break;
                            case "Processing":
                                <span class="badge bg-info">Processing</span>
                                break;
                            case "Shipped":
                                <span class="badge bg-primary">Shipped</span>
                                break;
                            case "Delivered":
                                <span class="badge bg-success">Delivered</span>
                                break;
                            case "Cancelled":
                                <span class="badge bg-danger">Cancelled</span>
                                break;
                            default:
                                <span class="badge bg-secondary">@Model.Status</span>
                                break;
                        }
                    </div>
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">Order Date</h6>
                        <p class="mb-0">@Model.OrderDate?.ToString("MMMM dd, yyyy")</p>
                    </div>
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">Payment Method</h6>
                        <p class="mb-0">@Model.Payments.FirstOrDefault()?.PaymentMethod ?? "Not specified"</p>
                    </div>
                    <div>
                        <h6 class="text-muted mb-2">Payment Status</h6>
                        @if (Model.Payments.Any())
                        {
                            var payment = Model.Payments.First();
                            @switch (payment.PaymentStatus)
                            {
                                case "Pending":
                                    <span class="badge bg-warning text-dark">Pending</span>
                                    break;
                                case "Completed":
                                    <span class="badge bg-success">Completed</span>
                                    break;
                                case "Failed":
                                    <span class="badge bg-danger">Failed</span>
                                    break;
                                default:
                                    <span class="badge bg-secondary">@payment.PaymentStatus</span>
                                    break;
                            }
                        }
                        else
                        {
                            <span class="badge bg-secondary">Not Available</span>
                        }
                    </div>
                </div>
            </div>

            <!-- Admin-specific status update action -->
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <h6 class="mb-3">Update Status</h6>
                    <form asp-action="UpdateOrderStatus" method="post">
                        <input type="hidden" name="orderId" value="@Model.OrderId" />
                        <select name="status" class="form-select mb-3">
                            <option value="Pending" selected="@("Pending" == Model.Status)">Pending</option>
                            <option value="Processing" selected="@("Processing" == Model.Status)">Processing</option>
                            <option value="Shipped" selected="@("Shipped" == Model.Status)">Shipped</option>
                            <option value="Delivered" selected="@("Delivered" == Model.Status)">Delivered</option>
                            <option value="Cancelled" selected="@("Cancelled" == Model.Status)">Cancelled</option>
                        </select>
                        <button type="submit" class="btn btn-info w-100">Update</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
